{"version":3,"sources":["./src/app/components/forecast-grid/forecast-grid.component.ts","./src/app/components/forecast-grid/forecast-grid.component.html","./src/environments/environment.ts","./src/app/services/forecast.service.ts","./src/app/components/location-search-bar/location-search-bar.component.ts","./src/app/components/location-search-bar/location-search-bar.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/services/location.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { ForecastService, ForecastResponse } from '../../services/forecast.service';\n\n@Component({\n  selector: 'app-forecast-grid',\n  templateUrl: './forecast-grid.component.html',\n  styleUrls: ['./forecast-grid.component.scss']\n})\nexport class ForecastGridComponent implements OnChanges {\n  @Input() latitude: number | null = null;\n  @Input() longitude: number | null = null;\n  @Input() units: 'metric' | 'imperial' = 'metric';\n  @Output() loading = new EventEmitter<boolean>();\n  @Output() error = new EventEmitter<string | null>();\n  forecast: ForecastResponse | null = null;\n  isLoading = false;\n  fetchError: string | null = null;\n\n  constructor(private readonly forecastService: ForecastService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ((changes.latitude || changes.longitude || changes.units) && this.latitude != null && this.longitude != null) {\n      this.fetchForecast();\n    }\n  }\n\n  fetchForecast() {\n    if (this.latitude == null || this.longitude == null) return;\n    this.isLoading = true;\n    this.fetchError = null;\n    this.loading.emit(true);\n    this.error.emit(null);\n    this.forecast = null;\n    this.forecastService.get7DayForecast(this.latitude, this.longitude, this.units).subscribe({\n      next: (data) => {\n        this.isLoading = false;\n        this.forecast = data;\n        this.loading.emit(false);\n      },\n      error: (err) => {\n        this.isLoading = false;\n        this.fetchError = err;\n        this.error.emit(err);\n        this.loading.emit(false);\n      }\n    });\n  }\n\n  getWeatherDescription(code: number): string {\n    const weatherCodes: { [key: number]: string } = {\n      0: 'Clear sky',\n      1: 'Mainly clear',\n      2: 'Partly cloudy',\n      3: 'Overcast',\n      51: 'Drizzle: Light intensity',\n      53: 'Drizzle: Moderate intensity',\n      55: 'Drizzle: Dense intensity',\n      61: 'Rain showers: Slight',\n      63: 'Rain showers: Moderate',\n      65: 'Rain showers: Violent',\n      // Add more codes as needed\n    };\n    return weatherCodes[code] || 'Unknown';\n  }\n\n  getDayLabel(date: string): string {\n    // Accepts ISO date or YYYY-MM-DD\n    const d = new Date(date + 'T00:00:00');\n    return d.toLocaleDateString(undefined, { weekday: 'short', month: 'short', day: 'numeric' });\n  }\n}\n","<div *ngIf=\"isLoading\" class=\"loading-container\">\n  <mat-progress-spinner diameter=\"36\" mode=\"indeterminate\" aria-label=\"Loading forecast\"></mat-progress-spinner>\n</div>\n<div *ngIf=\"fetchError && !isLoading\" class=\"error-container\">\n  <mat-error role=\"alert\">{{ fetchError }}</mat-error>\n</div>\n<div *ngIf=\"forecast && !isLoading\" class=\"forecast-container\">\n  <div class=\"forecast-header\">\n    <h3>7-Day Forecast</h3>\n    <span class=\"coords\">[{{ forecast.latitude | number:'1.4-4' }}, {{ forecast.longitude | number:'1.4-4' }}]</span>\n  </div>\n  <mat-radio-group class=\"unit-switch\" aria-label=\"Select units\" [(ngModel)]=\"units\" (ngModelChange)=\"fetchForecast()\">\n    <mat-radio-button value=\"metric\" aria-label=\"Switch to Celsius\">°C (Metric)</mat-radio-button>\n    <mat-radio-button value=\"imperial\" aria-label=\"Switch to Fahrenheit\">°F (Imperial)</mat-radio-button>\n  </mat-radio-group>\n  <div *ngIf=\"forecast.forecast.length === 0\" class=\"no-forecast\">No forecast data available for these coordinates.</div>\n  <pre *ngIf=\"forecast && forecast.forecast && forecast.forecast.length === 0\">DEBUG: {{ forecast | json }}</pre>\n  <div class=\"forecast-grid-wrapper\">\n    <mat-grid-list cols=\"3\" rowHeight=\"1:1\" gutterSize=\"24px\" *ngIf=\"forecast.forecast.length > 0\">\n      <mat-grid-tile *ngFor=\"let day of forecast.forecast\">\n        <mat-card class=\"forecast-card\">\n          <mat-card-header>\n            <mat-card-title>{{ getDayLabel(day.date) }}</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <div class=\"weather-desc\">{{ getWeatherDescription(day.weather_code) }}</div>\n            <div class=\"temp-max\">Max: {{ day.temperature.max | number:'1.1-1' }}°{{ forecast.units === 'imperial' ? 'F' : 'C' }}</div>\n            <div class=\"temp-min\">Min: {{ day.temperature.min | number:'1.1-1' }}°{{ forecast.units === 'imperial' ? 'F' : 'C' }}</div>\n          </mat-card-content>\n        </mat-card>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport interface ForecastDay {\n  date: string;\n  weather_code: number;\n  temperature: {\n    max: number;\n    min: number;\n  };\n}\n\nexport interface ForecastResponse {\n  latitude: number;\n  longitude: number;\n  units: 'metric' | 'imperial';\n  forecast: ForecastDay[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForecastService {\n  constructor(private readonly http: HttpClient) {}\n\n  get7DayForecast(latitude: number, longitude: number, units: 'metric' | 'imperial'): Observable<ForecastResponse> {\n    return this.http.get<any>(`/api/v1/forecast/week?latitude=${latitude}&longitude=${longitude}&units=${units}`)\n      .pipe(\n        map((apiResponse) => {\n          let mappedUnits: 'metric' | 'imperial' = apiResponse.units;\n          if (apiResponse.units === 'celsius') mappedUnits = 'metric';\n          else if (apiResponse.units === 'fahrenheit') mappedUnits = 'imperial';\n          return {\n            latitude: apiResponse.latitude,\n            longitude: apiResponse.longitude,\n            units: mappedUnits,\n            forecast: (apiResponse.forecast ?? []).map((day: any) => ({\n              date: day.day,\n              weather_code: day.weatherCode,\n              temperature: {\n                max: day.temperature.max,\n                min: day.temperature.min\n              },\n              precipitationProbability: day.precipitationChance\n            }))\n          };\n        }),\n        catchError((error: HttpErrorResponse) => throwError(error.error?.message ?? 'Forecast fetch failed'))\n      );\n  }\n}\n","import { Component, EventEmitter, Output, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-location-search-bar',\n  templateUrl: './location-search-bar.component.html',\n  styleUrls: ['./location-search-bar.component.scss']\n})\nexport class LocationSearchBarComponent implements OnInit {\n  searchQuery = '';\n  @Output() search = new EventEmitter<string>();\n  @Input() loading = false;\n  @Input() error: string | null = null;\n\n  constructor() {\n    console.log('[LocationSearchBar] constructor called');\n  }\n\n  ngOnInit() {\n    console.log('[LocationSearchBar] ngOnInit called');\n    console.log('[LocationSearchBar] Initial searchQuery:', this.searchQuery);\n    console.log('[LocationSearchBar] Initial loading:', this.loading);\n    console.log('[LocationSearchBar] Initial error:', this.error);\n  }\n\n  onSubmit(event?: Event) {\n    console.log('[LocationSearchBar] onSubmit called. Event:', event);\n    if (event) {\n      event.preventDefault();\n      console.log('[LocationSearchBar] event.preventDefault() called');\n    }\n    console.log('[LocationSearchBar] searchQuery:', this.searchQuery);\n    if (!this.searchQuery.trim()) {\n      console.log('[LocationSearchBar] searchQuery is empty, aborting');\n      return;\n    }\n    this.error = null;\n    this.loading = true;\n    console.log('[LocationSearchBar] Emitting search event with:', this.searchQuery.trim());\n    this.search.emit(this.searchQuery.trim());\n  }\n}\n","<form (ngSubmit)=\"onSubmit($event)\" class=\"search-form\" aria-label=\"Search for a location\" role=\"search\">\n  <mat-form-field appearance=\"outline\" class=\"search-input\" floatLabel=\"always\">\n    <mat-label>Enter city or airport name (e.g., London, LAX)</mat-label>\n    <input matInput\n           [(ngModel)]=\"searchQuery\"\n           name=\"searchQuery\"\n           required\n           aria-label=\"Location search input\"\n           autocomplete=\"off\"\n           [disabled]=\"loading\"\n           (keyup.enter)=\"onSubmit($event)\">\n  </mat-form-field>\n  <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"loading || !searchQuery.trim()\" aria-label=\"Submit location search\" class=\"search-btn\">\n    <ng-container *ngIf=\"!loading\">\n      <span class=\"search-label\">Search</span>\n    </ng-container>\n    <mat-progress-spinner *ngIf=\"loading\" diameter=\"24\" mode=\"indeterminate\"></mat-progress-spinner>\n  </button>\n  <mat-error *ngIf=\"error\" role=\"alert\">{{ error }}</mat-error>\n</form>\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<style>\n  :host {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    font-size: 14px;\n    color: #333;\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 8px 0;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  .spacer {\n    flex: 1;\n  }\n\n  .toolbar {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 60px;\n    display: flex;\n    align-items: center;\n    background-color: #1976d2;\n    color: white;\n    font-weight: 600;\n  }\n\n  .toolbar img {\n    margin: 0 16px;\n  }\n\n  .toolbar #twitter-logo {\n    height: 40px;\n    margin: 0 16px;\n  }\n\n  .toolbar #twitter-logo:hover {\n    opacity: 0.8;\n  }\n\n  .content {\n    display: flex;\n    margin: 82px auto 32px;\n    padding: 0 16px;\n    max-width: 960px;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  svg.material-icons {\n    height: 24px;\n    width: auto;\n  }\n\n  svg.material-icons:not(:last-child) {\n    margin-right: 8px;\n  }\n\n  .card svg.material-icons path {\n    fill: #888;\n  }\n\n  .card-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin-top: 16px;\n  }\n\n  .card {\n    border-radius: 4px;\n    border: 1px solid #eee;\n    background-color: #fafafa;\n    height: 40px;\n    width: 200px;\n    margin: 0 8px 16px;\n    padding: 16px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    transition: all 0.2s ease-in-out;\n    line-height: 24px;\n  }\n\n  .card-container .card:not(:last-child) {\n    margin-right: 0;\n  }\n\n  .card.card-small {\n    height: 16px;\n    width: 168px;\n  }\n\n  .card-container .card:not(.highlight-card) {\n    cursor: pointer;\n  }\n\n  .card-container .card:not(.highlight-card):hover {\n    transform: translateY(-3px);\n    box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);\n  }\n\n  .card-container .card:not(.highlight-card):hover .material-icons path {\n    fill: rgb(105, 103, 103);\n  }\n\n  .card.highlight-card {\n    background-color: #1976d2;\n    color: white;\n    font-weight: 600;\n    border: none;\n    width: auto;\n    min-width: 30%;\n    position: relative;\n  }\n\n  .card.card.highlight-card span {\n    margin-left: 60px;\n  }\n\n  svg#rocket {\n    width: 80px;\n    position: absolute;\n    left: -10px;\n    top: -24px;\n  }\n\n  svg#rocket-smoke {\n    height: calc(100vh - 95px);\n    position: absolute;\n    top: 10px;\n    right: 180px;\n    z-index: -10;\n  }\n\n  a,\n  a:visited,\n  a:hover {\n    color: #1976d2;\n    text-decoration: none;\n  }\n\n  a:hover {\n    color: #125699;\n  }\n\n  .terminal {\n    position: relative;\n    width: 80%;\n    max-width: 600px;\n    border-radius: 6px;\n    padding-top: 45px;\n    margin-top: 8px;\n    overflow: hidden;\n    background-color: rgb(15, 15, 16);\n  }\n\n  .terminal::before {\n    content: \"\\2022 \\2022 \\2022\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 4px;\n    background: rgb(58, 58, 58);\n    color: #c2c3c4;\n    width: 100%;\n    font-size: 2rem;\n    line-height: 0;\n    padding: 14px 0;\n    text-indent: 4px;\n  }\n\n  .terminal pre {\n    font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;\n    color: white;\n    padding: 0 1rem 1rem;\n    margin: 0;\n  }\n\n  .circle-link {\n    height: 40px;\n    width: 40px;\n    border-radius: 40px;\n    margin: 8px;\n    background-color: white;\n    border: 1px solid #eeeeee;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    transition: 1s ease-out;\n  }\n\n  .circle-link:hover {\n    transform: translateY(-0.25rem);\n    box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\n  }\n\n  footer {\n    margin-top: 8px;\n    display: flex;\n    align-items: center;\n    line-height: 20px;\n  }\n\n  footer a {\n    display: flex;\n    align-items: center;\n  }\n\n  .github-star-badge {\n    color: #24292e;\n    display: flex;\n    align-items: center;\n    font-size: 12px;\n    padding: 3px 10px;\n    border: 1px solid rgba(27,31,35,.2);\n    border-radius: 3px;\n    background-image: linear-gradient(-180deg,#fafbfc,#eff3f6 90%);\n    margin-left: 4px;\n    font-weight: 600;\n    font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;\n  }\n\n  .github-star-badge:hover {\n    background-image: linear-gradient(-180deg,#f0f3f6,#e6ebf1 90%);\n    border-color: rgba(27,31,35,.35);\n    background-position: -.5em;\n  }\n\n  .github-star-badge .material-icons {\n    height: 16px;\n    width: 16px;\n    margin-right: 4px;\n  }\n\n  svg#clouds {\n    position: fixed;\n    bottom: -160px;\n    left: -230px;\n    z-index: -10;\n    width: 1920px;\n  }\n\n\n  /* Responsive Styles */\n  @media screen and (max-width: 767px) {\n\n    .card-container > *:not(.circle-link) ,\n    .terminal {\n      width: 100%;\n    }\n\n    .card:not(.highlight-card) {\n      height: 16px;\n      margin: 8px 0;\n    }\n\n    .card.highlight-card span {\n      margin-left: 72px;\n    }\n\n    svg#rocket-smoke {\n      right: 120px;\n      transform: rotate(-5deg);\n    }\n  }\n\n  @media screen and (max-width: 575px) {\n    svg#rocket-smoke {\n      display: none;\n      visibility: hidden;\n    }\n  }\n\n  .error-card {\n    margin: 16px 0;\n    display: flex;\n    align-items: center;\n    padding: 16px;\n    border-radius: 8px;\n  }\n\n  .error-text {\n    margin-left: 8px;\n    font-weight: 500;\n    color: #fff;\n  }\n\n  .location-card {\n    margin: 8px 0;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    border-radius: 8px;\n    overflow: hidden;\n    transition: transform 0.2s;\n  }\n\n  .location-card:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  }\n\n  .location-title {\n    font-size: 16px;\n    font-weight: 600;\n    color: #333;\n  }\n\n  .location-details {\n    font-size: 14px;\n    color: #666;\n  }\n\n  .location-coords {\n    font-size: 12px;\n    color: #999;\n  }\n\n  mat-card {\n    width: 100%;\n    margin: 8px 0;\n  }\n\n  mat-card-content {\n    padding: 16px;\n  }\n\n  mat-card-actions {\n    padding: 8px 16px;\n    display: flex;\n    justify-content: flex-end;\n  }\n\n  /* Override Angular Material styles */\n  .mat-card {\n    border-radius: 8px;\n    overflow: hidden;\n  }\n\n  .mat-card-header {\n    padding: 0;\n  }\n\n  .mat-card-title {\n    font-size: 1.25rem;\n    margin: 0;\n  }\n\n  .mat-card-subtitle {\n    font-size: 1rem;\n    color: #666;\n  }\n\n  .mat-card-content {\n    padding: 16px;\n  }\n\n  .mat-card-actions {\n    padding: 8px 16px;\n    display: flex;\n    justify-content: flex-end;\n  }\n\n  .mat-icon {\n    vertical-align: middle;\n  }\n</style>\n\n<mat-toolbar color=\"primary\">\n  <span>{{ title }}</span>\n</mat-toolbar>\n\n<main class=\"content\">\n  <app-location-search-bar\n    (search)=\"onSearch($event)\"\n    [loading]=\"loading\"\n    [error]=\"error\">\n  </app-location-search-bar>\n\n  <div *ngIf=\"noResults && !loading && !error\" class=\"no-results\">\n    <mat-card class=\"error-card\" color=\"warn\">\n      <mat-card-content>\n        <mat-icon color=\"warn\" style=\"vertical-align: middle;\">error</mat-icon>\n        <span class=\"error-text\">No locations found.</span>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <div *ngIf=\"locations.length > 0 && !loading\" class=\"locations-list\">\n    <mat-card class=\"location-card\" *ngFor=\"let loc of locations\">\n      <mat-card-content>\n        <div class=\"location-title\">\n          <span class=\"loc-name\"><b>{{ loc.name }}</b></span>\n          <span *ngIf=\"loc.type\"> ({{ loc.type }})</span>\n        </div>\n        <div class=\"location-details\">\n          <span *ngIf=\"loc.state || loc.country\">{{ loc.state }}, {{ loc.country }}</span>\n          <span *ngIf=\"loc.airportCode\"> - Airport Code: {{ loc.airportCode }}</span>\n        </div>\n        <div class=\"location-coords\">\n          Lat: {{ loc.latitude }}, Lon: {{ loc.longitude }}\n        </div>\n      </mat-card-content>\n      <mat-card-actions>\n        <button mat-button color=\"primary\" (click)=\"onSelectLocation(loc.id)\">\n          Select\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n\n  <div *ngIf=\"loading\" class=\"loading-container\">\n    <mat-progress-spinner diameter=\"48\" mode=\"indeterminate\"></mat-progress-spinner>\n  </div>\n\n  <div *ngIf=\"error\" class=\"error-container\">\n    <mat-error>{{ error }}</mat-error>\n  </div>\n\n  <section *ngIf=\"selectedLatitude != null && selectedLongitude != null\" class=\"forecast-section\">\n    <div class=\"unit-switch\">\n      <button mat-button [color]=\"selectedUnits === 'metric' ? 'accent' : undefined\" (click)=\"onUnitsChange('metric')\" [attr.aria-pressed]=\"selectedUnits === 'metric'\">°C (Metric)</button>\n      <button mat-button [color]=\"selectedUnits === 'imperial' ? 'accent' : undefined\" (click)=\"onUnitsChange('imperial')\" [attr.aria-pressed]=\"selectedUnits === 'imperial'\">°F (Imperial)</button>\n    </div>\n    <app-forecast-grid [latitude]=\"selectedLatitude\" [longitude]=\"selectedLongitude\" [units]=\"selectedUnits\"></app-forecast-grid>\n  </section>\n</main>\n<router-outlet></router-outlet>\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n\n","import { Component } from '@angular/core';\nimport { LocationService, LocationResult } from './services/location.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Weather App';\n  locations: LocationResult[] = [];\n  loading = false;\n  error: string | null = null;\n  noResults = false;\n  selectedLocationId: string | null = null;\n  selectedLatitude: number | null = null;\n  selectedLongitude: number | null = null;\n  selectedUnits: 'metric' | 'imperial' = 'metric';\n\n  constructor(private readonly locationService: LocationService) {}\n\n  onSearch(query: string) {\n    console.log('[onSearch] Search query:', query);\n    this.loading = true;\n    this.error = null;\n    this.noResults = false;\n    this.locations = [];\n    this.locationService.searchLocations(query).subscribe({\n      next: (results) => {\n        console.log('[onSearch] API results:', results);\n        this.loading = false;\n        this.locations = results;\n        this.noResults = results.length === 0;\n        console.log('[onSearch] Updated locations:', this.locations);\n        console.log('[onSearch] noResults:', this.noResults, 'loading:', this.loading, 'error:', this.error);\n      },\n      error: (err) => {\n        this.loading = false;\n        this.error = err;\n        console.log('[onSearch] API error:', err);\n      }\n    });\n    console.log('[onSearch] After subscribe setup, locations:', this.locations);\n  }\n\n  onSelectLocation(locationId: string) {\n    this.selectedLocationId = locationId;\n    const location = this.locations.find(loc => loc.id === locationId);\n    this.selectedLatitude = location ? location.latitude : null;\n    this.selectedLongitude = location ? location.longitude : null;\n    this.selectedUnits = 'metric'; // Reset to default on new selection\n  }\n\n  onUnitsChange(units: 'metric' | 'imperial') {\n    this.selectedUnits = units;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LocationSearchBarComponent } from './components/location-search-bar/location-search-bar.component';\nimport { ForecastGridComponent } from './components/forecast-grid/forecast-grid.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LocationSearchBarComponent,\n    ForecastGridComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatRadioModule,\n    MatCardModule,\n    MatGridListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nexport interface LocationResult {\n  id: string;\n  name: string;\n  type?: string;\n  state?: string;\n  country?: string;\n  airportCode?: string;\n  latitude: number;\n  longitude: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n  constructor(private readonly http: HttpClient) {}\n\n  searchLocations(query: string): Observable<LocationResult[]> {\n    return this.http.get<{ locations: LocationResult[] }>(`/api/v1/locations/search?query=${encodeURIComponent(query)}`)\n      .pipe(\n        map(response => response.locations ?? []),\n        catchError((error: HttpErrorResponse) => throwError(error.error?.message ?? 'Search failed'))\n      );\n  }\n\n  /**\n   * Get a 7-day weather forecast for a location\n   * @param latitude Latitude of the location\n   * @param longitude Longitude of the location\n   * @param units Unit system for temperature values (optional, default: 'metric')\n   */\n  getWeeklyForecast(latitude: number, longitude: number, units: 'metric' | 'imperial' = 'metric'): Observable<any> {\n    return this.http.get<any>(`/api/v1/forecast/week?latitude=${latitude}&longitude=${longitude}&units=${units}`)\n      .pipe(\n        catchError((error: HttpErrorResponse) => throwError(error.error?.message ?? 'Weekly forecast failed'))\n      );\n  }\n\n  /**\n   * Get hourly weather forecast for the next 24 hours for a location\n   * @param lat Latitude of the location\n   * @param lon Longitude of the location\n   */\n  getHourlyForecast(lat: number, lon: number): Observable<any> {\n    return this.http.get<any>(`/api/v1/forecast/hourly?lat=${lat}&lon=${lon}`)\n      .pipe(\n        catchError((error: HttpErrorResponse) => throwError(error.error?.message ?? 'Hourly forecast failed'))\n      );\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}